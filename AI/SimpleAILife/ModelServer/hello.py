import os
from flask import Flask
import flask

app = Flask(__name__)

model_js = {"format": "layers-model", "generatedBy": "keras v2.5.0", "convertedBy": "TensorFlow.js Converter v3.11.0", "modelTopology": {"keras_version": "2.5.0", "backend": "tensorflow", "model_config": {"class_name": "Sequential", "config": {"name": "sequential_2", "layers": [{"class_name": "InputLayer", "config": {"batch_input_shape": [None, 20, 1662], "dtype": "float32", "sparse": False, "ragged": False, "name": "lstm_6_input"}}, {"class_name": "LSTM", "config": {"name": "lstm_6", "trainable": True, "batch_input_shape": [None, 20, 1662], "dtype": "float32", "return_sequences": True, "return_state": False, "go_backwards": False, "stateful": False, "unroll": False, "time_major": False, "units": 64, "activation": "relu", "recurrent_activation": "sigmoid", "use_bias": True, "kernel_initializer": {"class_name": "GlorotUniform", "config": {"seed": None}}, "recurrent_initializer": {"class_name": "Orthogonal", "config": {"gain": 1.0, "seed": None}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "unit_forget_bias": True, "kernel_regularizer": None, "recurrent_regularizer": None, "bias_regularizer": None, "activity_regularizer": None, "kernel_constraint": None, "recurrent_constraint": None, "bias_constraint": None, "dropout": 0.0, "recurrent_dropout": 0.0, "implementation": 2}}, {"class_name": "LSTM", "config": {"name": "lstm_7", "trainable": True, "dtype": "float32", "return_sequences": True, "return_state": False, "go_backwards": False, "stateful": False, "unroll": False, "time_major": False, "units": 128, "activation": "relu", "recurrent_activation": "sigmoid", "use_bias": False, "kernel_initializer": {"class_name": "GlorotUniform", "config": {"seed": None}}, "recurrent_initializer": {"class_name": "Orthogonal", "config": {"gain": 1.0, "seed": None}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "unit_forget_bias": True, "kernel_regularizer": None, "recurrent_regularizer": None, "bias_regularizer": None, "activity_regularizer": None, "kernel_constraint": None, "recurrent_constraint": None, "bias_constraint": None, "dropout": 0.0, "recurrent_dropout": 0.0, "implementation": 2}}, {"class_name": "LSTM", "config": {"name": "lstm_8", "trainable": True, "dtype": "float32", "return_sequences": False, "return_state": False, "go_backwards": False, "stateful": False, "unroll": False, "time_major": False, "units": 64, "activation": "relu", "recurrent_activation": "sigmoid", "use_bias": True, "kernel_initializer": {"class_name": "GlorotUniform", "config": {"seed": None}}, "recurrent_initializer": {"class_name": "Orthogonal", "config": {"gain": 1.0, "seed": None}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "unit_forget_bias": True, "kernel_regularizer": None, "recurrent_regularizer": None, "bias_regularizer": None, "activity_regularizer": None, "kernel_constraint": None, "recurrent_constraint": None, "bias_constraint": None, "dropout": 0.0, "recurrent_dropout": 0.0, "implementation": 2}}, {"class_name": "Dense", "config": {"name": "dense_6", "trainable": True, "dtype": "float32", "units": 64, "activation": "relu", "use_bias": True, "kernel_initializer": {"class_name": "GlorotUniform", "config": {"seed": None}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "kernel_regularizer": None, "bias_regularizer": None, "activity_regularizer": None, "kernel_constraint": None, "bias_constraint": None}}, {"class_name": "Dense", "config": {"name": "dense_7", "trainable": True, "dtype": "float32", "units": 32, "activation": "relu", "use_bias": True, "kernel_initializer": {"class_name": "GlorotUniform", "config": {"seed": None}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "kernel_regularizer": None, "bias_regularizer": None, "activity_regularizer": None, "kernel_constraint": None, "bias_constraint": None}}, {"class_name": "Dense", "config": {"name": "dense_8", "trainable": True, "dtype": "float32", "units": 6, "activation": "softmax", "use_bias": True, "kernel_initializer": {"class_name": "GlorotUniform", "config": {"seed": None}}, "bias_initializer": {"class_name": "Zeros", "config": {}}, "kernel_regularizer": None, "bias_regularizer": None, "activity_regularizer": None, "kernel_constraint": None, "bias_constraint": None}}]}}, "training_config": {"loss": "categorical_crossentropy", "metrics": [[{"class_name": "MeanMetricWrapper", "config": {"name": "categorical_accuracy", "dtype": "float32", "fn": "categorical_accuracy"}}]], "weighted_metrics": None, "loss_weights": None, "optimizer_config": {"class_name": "Adam", "config": {"name": "Adam", "learning_rate": 0.0010000000474974513, "decay": 0.0, "beta_1": 0.8999999761581421, "beta_2": 0.9990000128746033, "epsilon": 1e-07, "amsgrad": False}}}}, "weightsManifest": [{"paths": ["group1-shard1of1.bin"], "weights": [{"name": "dense_6/kernel", "shape": [64, 64], "dtype": "float32"}, {"name": "dense_6/bias", "shape": [64], "dtype": "float32"}, {"name": "dense_7/kernel", "shape": [64, 32], "dtype": "float32"}, {"name": "dense_7/bias", "shape": [32], "dtype": "float32"}, {"name": "dense_8/kernel", "shape": [32, 6], "dtype": "float32"}, {"name": "dense_8/bias", "shape": [6], "dtype": "float32"}, {"name": "lstm_6/lstm_cell/kernel", "shape": [1662, 256], "dtype": "float32"}, {"name": "lstm_6/lstm_cell/recurrent_kernel", "shape": [64, 256], "dtype": "float32"}, {"name": "lstm_6/lstm_cell/bias", "shape": [256], "dtype": "float32"}, {"name": "lstm_7/lstm_cell_1/kernel", "shape": [64, 512], "dtype": "float32"}, {"name": "lstm_7/lstm_cell_1/recurrent_kernel", "shape": [128, 512], "dtype": "float32"}, {"name": "lstm_7/lstm_cell_1/bias", "shape": [512], "dtype": "float32"}, {"name": "lstm_8/lstm_cell_2/kernel", "shape": [128, 256], "dtype": "float32"}, {"name": "lstm_8/lstm_cell_2/recurrent_kernel", "shape": [64, 256], "dtype": "float32"}, {"name": "lstm_8/lstm_cell_2/bias", "shape": [256], "dtype": "float32"}]}]}

print(os.path)
@app.route("/")
def hello_world():
    response = flask.jsonify(model_js)
    response.headers.add('Access-Control-Allow-Origin', '*')
    return response



if __name__ == "__main__":
    app.run(debug=True)